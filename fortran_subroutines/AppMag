      subroutine AppMag (r, delta, robs, h, g, alpha, mag, ierr)

c-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
c This routine computes phase angle and apparent magnitude.
c-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
c
c J-M. Petit  Observatoire de Besancon
c Version 1 : February 2004
c
c-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
c INPUT
c     r     : Sun-object distance (R8)
c     delta : Earth-object distance (R8)
c     robs  : Sun-Earth distance (R8)
c     h     : Absolute magnitude of object (R8)
c     g     : Slope of object (R8)
c
c OUTPUT
c     alpha : Phase angle (R8)
c     mag   : Apparent magnitude (R8)
c     ierr  : Error code
c                0 : nominal run
c               10 : wrong input data
c-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
      implicit none

      integer
     $  ierr

      real*8
     $  r, delta, robs, h, g, alpha, mag, Pi, raddeg, denom, phi1, phi2

      parameter
     $  (Pi = 3.141592653589793d0, raddeg = 180.0d0/Pi)

      ierr = 0
      denom = 2.d0*r*delta
      if (denom .eq. 0.d0) then
         ierr = 10
         return
      end if
      alpha = dacos((-robs**2 + delta**2 + r**2)/denom)
      phi1 = exp(-3.33d0*(dtan(alpha/2.0d0))**0.63d0)
      phi2 = exp(-1.87d0*(dtan(alpha/2.0d0))**1.22d0)
      mag = 5.d0*dlog10(r*delta) + h
     $  - 2.5d0*dlog10((1.d0 - g)*phi1 + g*phi2)

      return
      end

